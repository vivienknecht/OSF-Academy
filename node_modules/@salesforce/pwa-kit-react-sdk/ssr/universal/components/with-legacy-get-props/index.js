"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withLegacyGetProps = void 0;
var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));
var _fetchStrategy = require("../fetch-strategy");
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; } /*
                                                                                                                                                                                                                                                                                                                                                                                                       * Copyright (c) 2022, Salesforce, Inc.
                                                                                                                                                                                                                                                                                                                                                                                                       * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                       * SPDX-License-Identifier: BSD-3-Clause
                                                                                                                                                                                                                                                                                                                                                                                                       * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
                                                                                                                                                                                                                                                                                                                                                                                                       */
const withLegacyGetProps = Wrapped => {
  /* istanbul ignore next */
  const wrappedComponentName = Wrapped.displayName || Wrapped.name;

  /**
   * @private
   */
  class WithLegacyGetProps extends _fetchStrategy.FetchStrategy {
    render() {
      return /*#__PURE__*/_react.default.createElement(Wrapped, this.props);
    }

    /**
     * @private
     */
    static doInitAppState({
      App,
      match,
      route,
      req,
      res,
      location
    }) {
      return _asyncToGenerator(function* () {
        const {
          params
        } = match;
        const components = [App, route.component];
        const promises = components.map(c => c.getProps ? c.getProps({
          req,
          res,
          params,
          location
        }) : Promise.resolve({}));
        const [appProps, pageProps] = yield Promise.all(promises);
        return {
          appProps,
          pageProps
        };
      })();
    }

    /**
     * @private
     */
    static getInitializers() {
      var _Wrapped$getInitializ;
      return [WithLegacyGetProps.doInitAppState, ...(((_Wrapped$getInitializ = Wrapped.getInitializers) === null || _Wrapped$getInitializ === void 0 ? void 0 : _Wrapped$getInitializ.call(Wrapped)) ?? [])];
    }

    /**
     * @private
     */
    static getHOCsInUse() {
      var _Wrapped$getHOCsInUse;
      return [withLegacyGetProps, ...(((_Wrapped$getHOCsInUse = Wrapped.getHOCsInUse) === null || _Wrapped$getHOCsInUse === void 0 ? void 0 : _Wrapped$getHOCsInUse.call(Wrapped)) ?? [])];
    }
  }
  WithLegacyGetProps.displayName = `withLegacyGetProps(${wrappedComponentName})`;
  const exclude = {
    doInitAppState: true,
    getInitializers: true,
    initAppState: true,
    getHOCsInUse: true
  };
  (0, _hoistNonReactStatics.default)(WithLegacyGetProps, Wrapped, exclude);
  return WithLegacyGetProps;
};
exports.withLegacyGetProps = withLegacyGetProps;