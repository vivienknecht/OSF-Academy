import { CookieAttributes } from 'js-cookie';
/**
 * Utility to determine if you are on the browser (client) or not.
 */
export declare const onClient: () => boolean;
/**
 * Gets the value to use for the `sameSite` cookie attribute.
 * @returns `undefined` if running on the server, `"none"` if running as an iframe on a trusted site
 * (i.e. Storefront Preview), otherwise `"Lax"`
 */
export declare const getCookieSameSiteAttribute: () => "Lax" | "none" | undefined;
/**
 * Gets the default cookie attributes. Sets the secure flag unless running on localhost in Safari.
 * Sets the sameSite attribute to `"none"` when running in a trusted iframe.
 */
export declare const getDefaultCookieAttributes: () => CookieAttributes;
/**
 * Determines whether local storage is available by trying to set a test value.
 */
export declare function detectLocalStorageAvailable(): boolean;
/**
 * Determines whether cookies are available by trying to set a test value.
 */
export declare function detectCookiesAvailable(options?: CookieAttributes): boolean;
//# sourceMappingURL=utils.d.ts.map