"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usePageContext = exports.default = exports.PageContext = exports.Page = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactHelmet = require("react-helmet");
var _Region = require("../Region");
const _excluded = ["page", "components", "className"];
/*
 * Copyright (c) 2023, Salesforce, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
// This context will hold the component map as well as any other future context.
const PageContext = /*#__PURE__*/_react.default.createContext(undefined);

// This hook allows sub-components to use the page context. In our case we use it
// so that the generic <Component /> can use the component map to know which react component
// to render.
exports.PageContext = PageContext;
const usePageContext = () => {
  const value = (0, _react.useContext)(PageContext);
  if (!value) {
    throw new Error('"usePageContext" cannot be used outside of a page component.');
  }
  return value;
};

/**
 * This component will render a page designer page given its serialized data object.
 *
 * @param {PageProps} props
 * @param {Page} props.region - The page designer page data representation.
 * @param {ComponentMap} props.components - A mapping of typeId's to react components representing the type.
 * @returns {React.ReactElement} - Page component.
 */
exports.usePageContext = usePageContext;
const Page = props => {
  const {
      page,
      components,
      className = ''
    } = props,
    rest = _objectWithoutProperties(props, _excluded);
  const [contextValue, setContextValue] = (0, _react.useState)({
    components
  });
  const {
    id,
    regions,
    pageDescription,
    pageKeywords,
    pageTitle
  } = page || {};

  // NOTE: This probably is not required as the list of components is known at compile time,
  // but we might need this ability in the future if we are to lazy load components.
  (0, _react.useEffect)(() => {
    setContextValue(_objectSpread(_objectSpread({}, contextValue), {}, {
      components
    }));
  }, [components]);
  return /*#__PURE__*/_react.default.createElement(PageContext.Provider, {
    value: contextValue
  }, /*#__PURE__*/_react.default.createElement(_reactHelmet.Helmet, null, pageTitle && /*#__PURE__*/_react.default.createElement("title", null, pageTitle), pageDescription && /*#__PURE__*/_react.default.createElement("meta", {
    name: "description",
    content: pageDescription
  }), pageKeywords && /*#__PURE__*/_react.default.createElement("meta", {
    name: "keywords",
    content: pageKeywords
  })), /*#__PURE__*/_react.default.createElement("div", _extends({
    id: id,
    className: `page ${className}`
  }, rest), /*#__PURE__*/_react.default.createElement("div", {
    className: "container"
  }, regions === null || regions === void 0 ? void 0 : regions.map(region => /*#__PURE__*/_react.default.createElement(_Region.Region, {
    key: region.id,
    region: region
  })))));
};
exports.Page = Page;
Page.displayName = 'Page';
var _default = Page;
exports.default = _default;