"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propType = exports.default = exports.Region = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Component = require("../Component");
var _propTypes2 = require("../prop-types");
const _excluded = ["region", "className"];
/*
 * Copyright (c) 2023, Salesforce, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
/**
 * This PropType represents a `region` object from the ShopperExperience API.
 */
const propType = _propTypes.default.shape({
  id: _propTypes.default.string,
  components: _propTypes.default.arrayOf(_propTypes2.componentPropType)
});
exports.propType = propType;
/**
 * This component will render a page designer region given its serialized data object.
 *
 * @param {RegionProps} props
 * @param {Region} props.region - The page designer region data representation.
 * @returns {React.ReactElement} - Region component.
 */
const Region = props => {
  const {
      region,
      className = ''
    } = props,
    rest = _objectWithoutProperties(props, _excluded);
  const {
    id,
    components
  } = region;
  return /*#__PURE__*/_react.default.createElement("div", _extends({
    id: id,
    className: `region ${className}`
  }, rest), /*#__PURE__*/_react.default.createElement("div", {
    className: "container"
  }, components === null || components === void 0 ? void 0 : components.map(component => /*#__PURE__*/_react.default.createElement(_Component.Component, {
    key: component.id,
    component: component
  }))));
};
exports.Region = Region;
Region.displayName = 'Region';
Region.propTypes = {
  region: propType.isRequired,
  className: _propTypes.default.string
};
var _default = Region;
exports.default = _default;