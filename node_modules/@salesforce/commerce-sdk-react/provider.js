"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ConfigContext = exports.CommerceApiContext = exports.AuthContext = void 0;
var _react = _interopRequireWildcard(require("react"));
var _commerceSdkIsomorphic = require("commerce-sdk-isomorphic");
var _auth = _interopRequireDefault(require("./auth"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */

/**
 * @internal
 */
const CommerceApiContext = /*#__PURE__*/_react.default.createContext({});

/**
 * @internal
 */
exports.CommerceApiContext = CommerceApiContext;
const ConfigContext = /*#__PURE__*/_react.default.createContext({});

/**
 * @internal
 */
exports.ConfigContext = ConfigContext;
const AuthContext = /*#__PURE__*/_react.default.createContext({});

/**
 * Initialize a set of Commerce API clients and make it available to all of descendant components
 *
 * @group Components
 * 
 * @example
 * ```js
    import {CommerceApiProvider} from '@salesforce/commerce-sdk-react'


    const App = ({children}) => {
        return (
                <CommerceApiProvider
                    clientId="12345678-1234-1234-1234-123412341234"
                    organizationId="f_ecom_aaaa_001"
                    proxy="localhost:3000/mobify/proxy/api"
                    redirectURI="localhost:3000/callback"
                    siteId="RefArch"
                    shortCode="12345678"
                    locale="en-US"
                    currency="USD"
                >
                    {children}
                </CommerceApiProvider>
        )
    } 

    export default App
 * ```
 * 
 * @returns Provider to wrap your app with
 */
exports.AuthContext = AuthContext;
const CommerceApiProvider = props => {
  const {
    children,
    clientId,
    headers = {},
    organizationId,
    proxy,
    redirectURI,
    fetchOptions,
    siteId,
    shortCode,
    locale,
    currency,
    fetchedToken,
    OCAPISessionsURL
  } = props;
  const config = {
    proxy,
    headers,
    parameters: {
      clientId,
      organizationId,
      shortCode,
      siteId,
      locale,
      currency
    },
    throwOnBadResponse: true,
    fetchOptions
  };
  const apiClients = (0, _react.useMemo)(() => {
    return {
      shopperBaskets: new _commerceSdkIsomorphic.ShopperBaskets(config),
      shopperContexts: new _commerceSdkIsomorphic.ShopperContexts(config),
      shopperCustomers: new _commerceSdkIsomorphic.ShopperCustomers(config),
      shopperExperience: new _commerceSdkIsomorphic.ShopperExperience(config),
      shopperGiftCertificates: new _commerceSdkIsomorphic.ShopperGiftCertificates(config),
      shopperLogin: new _commerceSdkIsomorphic.ShopperLogin(config),
      shopperOrders: new _commerceSdkIsomorphic.ShopperOrders(config),
      shopperProducts: new _commerceSdkIsomorphic.ShopperProducts(config),
      shopperPromotions: new _commerceSdkIsomorphic.ShopperPromotions(config),
      shopperSearch: new _commerceSdkIsomorphic.ShopperSearch(config)
    };
  }, [clientId, organizationId, shortCode, siteId, proxy, fetchOptions, locale, currency, headers === null || headers === void 0 ? void 0 : headers['correlation-id']]);
  const auth = (0, _react.useMemo)(() => {
    return new _auth.default({
      clientId,
      organizationId,
      shortCode,
      siteId,
      proxy,
      redirectURI,
      fetchOptions,
      fetchedToken,
      OCAPISessionsURL
    });
  }, [clientId, organizationId, shortCode, siteId, proxy, redirectURI, fetchOptions, fetchedToken, OCAPISessionsURL]);

  // Initialize the session
  (0, _react.useEffect)(() => void auth.ready(), [auth]);
  return /*#__PURE__*/_react.default.createElement(ConfigContext.Provider, {
    value: {
      clientId,
      headers,
      organizationId,
      proxy,
      redirectURI,
      fetchOptions,
      siteId,
      shortCode,
      locale,
      currency
    }
  }, /*#__PURE__*/_react.default.createElement(CommerceApiContext.Provider, {
    value: apiClients
  }, /*#__PURE__*/_react.default.createElement(AuthContext.Provider, {
    value: auth
  }, children)));
};
var _default = CommerceApiProvider;
exports.default = _default;