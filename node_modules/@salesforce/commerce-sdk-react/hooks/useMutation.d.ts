import { CacheUpdateGetter, ApiOptions, ApiMethod, ApiClient, MergedOptions } from './types';
/**
 * Helper for mutation hooks, contains most of the logic in order to keep individual hooks small.
 * @param hookConfig - Config values that vary per API endpoint
 * @internal
 */
export declare const useMutation: <Client extends ApiClient, Options extends ApiOptions<Record<string, unknown>, unknown[] | Record<string, unknown> | undefined, Record<string, string>>, Data>(hookConfig: {
    client: Client;
    method: ApiMethod<Options, Data>;
    getCacheUpdates: CacheUpdateGetter<Required<ApiOptions<NonNullable<Client["clientConfig"]["parameters"] & Options["parameters"]>, unknown extends Options["body"] ? never : Options["body"], NonNullable<Client["clientConfig"]["headers"] & Options["headers"]>>>, Data>;
}) => import("@tanstack/react-query").UseMutationResult<Data, unknown, Options, unknown>;
//# sourceMappingURL=useMutation.d.ts.map