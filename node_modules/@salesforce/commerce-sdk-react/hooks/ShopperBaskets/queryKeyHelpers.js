"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTaxesFromBasket = exports.getShippingMethodsForShipment = exports.getPriceBooksForBasket = exports.getPaymentMethodsForBasket = exports.getBasket = void 0;
var _utils = require("../utils");
/*
 * Copyright (c) 2023, Salesforce, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */

// We must use a client with no parameters in order to have required/optional match the API spec

// This is defined here, rather than `types.ts`, because it relies on `Client` and `QueryKeys`,
// and making those generic would add too much complexity.

const getBasket = {
  parameters: params => (0, _utils.pick)(params, ['organizationId', 'basketId', 'siteId', 'locale']),
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/baskets/', params.basketId],
  queryKey: params => [...getBasket.path(params), getBasket.parameters(params)]
};
exports.getBasket = getBasket;
const getPaymentMethodsForBasket = {
  parameters: params => (0, _utils.pick)(params, ['organizationId', 'basketId', 'siteId', 'locale']),
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/baskets/', params.basketId, '/payment-methods'],
  queryKey: params => [...getPaymentMethodsForBasket.path(params), getPaymentMethodsForBasket.parameters(params)]
};
exports.getPaymentMethodsForBasket = getPaymentMethodsForBasket;
const getPriceBooksForBasket = {
  parameters: params => (0, _utils.pick)(params, ['organizationId', 'basketId', 'siteId']),
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/baskets/', params.basketId, '/price-books'],
  queryKey: params => [...getPriceBooksForBasket.path(params), getPriceBooksForBasket.parameters(params)]
};
exports.getPriceBooksForBasket = getPriceBooksForBasket;
const getShippingMethodsForShipment = {
  parameters: params => (0, _utils.pick)(params, ['organizationId', 'basketId', 'shipmentId', 'siteId', 'locale']),
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/baskets/', params.basketId, '/shipments/', params.shipmentId, '/shipping-methods'],
  queryKey: params => [...getShippingMethodsForShipment.path(params), getShippingMethodsForShipment.parameters(params)]
};
exports.getShippingMethodsForShipment = getShippingMethodsForShipment;
const getTaxesFromBasket = {
  parameters: params => (0, _utils.pick)(params, ['organizationId', 'basketId', 'siteId']),
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/baskets/', params.basketId, '/taxes'],
  queryKey: params => [...getTaxesFromBasket.path(params), getTaxesFromBasket.parameters(params)]
};
exports.getTaxesFromBasket = getTaxesFromBasket;