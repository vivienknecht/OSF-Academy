import { UseMutationResult } from '@tanstack/react-query';
import Auth from '../auth';
/**
 * @group Helpers
 * @category Shopper Authentication
 * @enum
 */
export declare const AuthHelpers: {
    readonly LoginGuestUser: "loginGuestUser";
    readonly LoginRegisteredUserB2C: "loginRegisteredUserB2C";
    readonly Logout: "logout";
    readonly Register: "register";
};
/**
 * @group Helpers
 * @category Shopper Authentication
 *
 */
export type AuthHelper = (typeof AuthHelpers)[keyof typeof AuthHelpers];
/**
 * A hook for Public Client OAuth helpers.
 *
 * The hook calls the SLAS helpers imported from commerce-sdk-isomorphic.
 * For more, see https://github.com/SalesforceCommerceCloud/commerce-sdk-isomorphic/#public-client-shopper-login-helpers
 *
 * Avaliable helpers:
 * - loginRegisteredUserB2C
 * - loginGuestUser
 * - logout
 * - register
 *
 * @group Helpers
 * @category Shopper Authentication
 */
export declare function useAuthHelper<Mutation extends AuthHelper>(mutation: Mutation): UseMutationResult<ReturnType<Auth[Mutation]> extends Promise<infer Data> ? Data : never, unknown, [
] extends Parameters<Auth[Mutation]> ? void : Parameters<Auth[Mutation]>[0], unknown>;
//# sourceMappingURL=useAuthHelper.d.ts.map